{%- for block in section.blocks -%}
  {%- case block.type -%}
    {%- when 'announcement' -%}
      <div class="announcement-bar color-{{ block.settings.color_scheme }} gradient" role="region" aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }}>
        <div class="page-width">
          <p class="announcement-bar__message {{ block.settings.text_alignment }} h5">
            {%- if block.settings.link != blank -%}
              <a href="{{ block.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow">
            {%- endif -%}
              <span>{{ block.settings.text | escape }}</span>
            {%- if block.settings.link != blank -%}
                {% render 'icon-arrow' %}
              </a>
            {%- endif -%}
            {%- if block.settings.countdown != blank -%}
              <span id="countdown-{{ block.id }}"></span>
              <script>
                function countdown(targetDate, elementId, expiredMessage) {
                  const countdownElement = document.getElementById(elementId);
                  const second = 1000;
                  const minute = 60 * second;
                  const hour = minute * 60;
                  const day = hour * 24;

                  let timeRemaining = targetDate - new Date();

                  // update countdown every second
                  function updateCountdown() {
                    timeRemaining = targetDate - new Date();

                    // stop execution of updateCountdown if targetDate is reached
                    if (timeRemaining <= 0) {
                      countdownElement.innerHTML = expiredMessage;
                      clearInterval(interval);
                      return;
                    }

                    // calculate values for remaining time  
                    const daysRemaining = Math.floor(timeRemaining / day);
                    const hoursRemaining = Math.floor(timeRemaining % day / hour);
                    const minutesRemaining = Math.floor(timeRemaining % hour / minute);
                    const secondsRemaining = Math.floor(timeRemaining % minute / second);

                    const dayString = daysRemaining === 1 ? "day" : "days";
                    const hourString = hoursRemaining === 1 ? "hour" : "hours";
                    const minuteString = minutesRemaining === 1 ? "minute" : "minutes";
                    const secondString = secondsRemaining === 1 ? "second" : "seconds";

                    const daysRemainingText = daysRemaining === 0 ? "" : `${daysRemaining} ${dayString} `;
                    const hoursRemainingText = hoursRemaining === 0 ? "" : `${hoursRemaining} ${hourString} `;
                    const minutesRemainingText = minutesRemaining === 0 ? "" : `${minutesRemaining} ${minuteString} `;
                    const secondsRemainingText = secondsRemaining === 0 ? "" : `${secondsRemaining} ${secondString}`;

                    countdownElement.innerHTML = `${daysRemainingText}${hoursRemainingText}${minutesRemainingText}${secondsRemainingText} remaining`;
                  }

                  // set the interval to update the countdown every second
                  // then immediately execute uptdatecountdown to avoid a 1 second delay
                  const interval = setInterval(updateCountdown, second);
                  updateCountdown();
                }
                document.addEventListener("DOMContentLoaded", function() {
                  countdown(new Date("{{ block.settings.countdown }}"), "countdown-{{ block.id }}", "Expired");
                });
              </script>
            {%- endif -%}
          </p>
        </div>
      </div>
  {%- endcase -%}
{%- endfor -%}
{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "class": "announcement-bar-section",
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Welcome to our store",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "options": [
            {
              "value": "left",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__1.label"
            },
            {
              "value": "center",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__2.label"
            },
            {
              "value": "right",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__3.label"
            }
          ],
          "default": "center",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.label"
        },
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "accent-1",
              "label": "t:sections.all.colors.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:sections.all.colors.accent_2.label"
            },
            {
              "value": "background-1",
              "label": "t:sections.all.colors.background_1.label"
            },
            {
              "value": "background-2",
              "label": "t:sections.all.colors.background_2.label"
            },
            {
              "value": "inverse",
              "label": "t:sections.all.colors.inverse.label"
            }
          ],
          "default": "accent-1",
          "label": "t:sections.all.colors.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label"
        },
        {
          "type": "text",
          "id": "countdown",
          "label": "Countdown",
          "info": "Enter the date, time and time zone. Examples: Feb 16, 2023 23:59:00 EST / Dec 25, 2023 23:59:00 GMT-0700"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}